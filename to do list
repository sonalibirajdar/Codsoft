#include<iostream>
#include<vector>
using namespace std;
struct Task
{
	string description;
	bool completed;
	
	Task(const string& desc): description(desc),completed(false) {}
	
};

int main()
{
	vector <Task> tasks;
	int ch;
	
 do
  {
  	cout<<"====TASKS===="<<endl;
	cout<<"1.Add task\n2.View task\n3.Mark task as completed\n4.Delete task\n5.Exit\n";
	cout<<"Enter your choice"<<endl;
	cin>>ch;
	
	switch(ch)
	{
		case 1:
			{
				cout<<"Enter the description"<<endl;
				string description;
				cin>>description;
				tasks.push_back(Task(description));
				cout<<"Task added successfully!!!"<<endl;
				break;
			}
		case 2:
		{
			cout<<"Tasks"<<endl;
			for(int i=0;i<tasks.size();++i)
			{
				cout<<i+1<<"."<<tasks[i].description;
				if(tasks[i].completed)
				{
					cout<<"- Completed"<<endl;
				}
				else
				{
					cout<<"- Pending"<<endl;
				}
			}
			break;
		}
		case 3:
			{
				cout<<"Enter the task number which mark as to b completed"<<endl;
				int taskNum;
				cin>>taskNum;
				if(taskNum>0 && taskNum<=tasks.size())
				{
					tasks[taskNum-1].completed=true;
					cout<<"Task marked as completed"<<endl;
				}
				break;
			}
		case 4:
		{    
		    cout<<"Enter the task number which mark as to b completed"<<endl;
			int taskNum;
			cin>>taskNum;
			if(taskNum>0 && taskNum<=tasks.size())
               {
               	tasks.erase(tasks.begin() + taskNum-1);
               	cout<<"Task deleted successfully!!!"<<endl;
			   }		
			break;
		}
		case 5:
			{
				cout<<"Exiting program. Goodbye!!!!"<<endl;
				break;
			}
	}
 }while(ch!=5);
 
 return 0;
	
}
